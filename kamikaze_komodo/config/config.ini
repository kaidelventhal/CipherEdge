# kamikaze_komodo/config/config.ini
# Added Phase 3 and Phase 4 settings, Vertex AI settings, and RSS feeds
[General]
LogLevel = INFO
LogFilePath = logs/kamikaze_komodo.log

[API]
ExchangeID = krakenfutures
KrakenTestnet = True

[DataFetching]
DefaultSymbol = PF_XBTUSD
DefaultTimeframe = 4h
HistoricalDataDays = 365
DataFetchLimitPerCall = 500
; For paginated historical data

[Trading]
MaxPortfolioRisk = 0.02
DefaultLeverage = 1.0
CommissionBPS = 10
; Basis points, e.g. 10 bps = 0.1% = 0.001 rate

[EWMAC_Strategy]
ShortWindow = 12
LongWindow = 26
SignalWindow = 9
; ATR period for strategy's internal ATR calculation (if any)
atr_period = 14

; --- Phase 3 Settings ---
[RiskManagement]
PositionSizer = ATRBased
; Options: FixedFractional, ATRBased
FixedFractional_AllocationFraction = 0.10
; Fraction of *equity* to allocate to a new position
ATRBased_RiskPerTradeFraction = 0.01
; Fraction of *equity* to risk per trade (requires ATR from strategy/bar)
ATRBased_ATRMultipleForStop = 2.0
; How many ATRs away the stop is placed for sizing calculation

StopManager_Default = ATRBased
; Options: PercentageBased, ATRBased (ATRBased needs ATR on trade/bar)
PercentageStop_LossPct = 0.02
; 2% stop loss from entry. Set to 0 or None to disable.
PercentageStop_TakeProfitPct = 0.05
; 5% take profit from entry. Set to 0 or None to disable.
ATRStop_ATRMultiple = 2.0
; For ATRStopManager if used. Needs ATR at trade entry.

[PortfolioConstructor]
AssetAllocator = FixedWeight
; For now, mainly conceptual for single asset backtest
DefaultAllocation_BTCUSD = 1.0
; Example: PF_XBTUSD if using Kraken Futures symbol
Rebalancer_DeviationThreshold = 0.05
; For BasicRebalancer (conceptual for now)

; --- Phase 4 Settings ---
[AI_NewsAnalysis]
EnableSentimentAnalysis = True
SentimentLLMProvider = VertexAI
; Options: VertexAI, Ollama (Ollama is now legacy for this project)
SentimentFilter_Threshold_Long = 0.1
; Example: Only take LONG if sentiment > 0.1
SentimentFilter_Threshold_Short = -0.1
; Example: Only take SHORT if sentiment < -0.1 (if shorting implemented)
SimulatedSentimentDataPath = data/simulated_sentiment_data.csv
; For backtesting
NewsScraper_Enable = True
NotificationListener_Enable = False
; Jeepney D-Bus listener is mostly placeholder
BrowserAgent_Enable = False
; browser-use agent is resource intensive, enable for specific tasks
BrowserAgent_LLMProvider = VertexAI
; Can be same or different from sentiment LLM provider

[VertexAI]
ProjectID = kamikazekomodo
Location = us-central1
SentimentModelName = gemini-2.5-flash-preview-05-20
BrowserAgentModelName = gemini-2.5-flash-preview-05-20
; You might use a more powerful model for browser agent if needed, e.g., gemini-1.5-pro-preview-0514

; RSS Feeds for NewsScraper (add as many as needed, use unique keys)
RSSFeed_Coindesk = https://www.coindesk.com/arc/outboundfeeds/rss/?outputType=xml
RSSFeed_Cointelegraph = https://cointelegraph.com/rss
RSSFeed_Decrypt = https://decrypt.co/feed/
RSSFeed_BitcoinComNews = https://news.bitcoin.com/feed/
RSSFeed_Bitcoinist = https://bitcoinist.com/feed/
RSSFeed_UToday = https://u.today/feed/
RSSFeed_CCNNews = https://www.ccn.com/news/crypto-news/feeds/
RSSFeed_CryptoPotato = https://cryptopotato.com/feed/
RSSFeed_CryptoSlate = https://cryptoslate.com/feed/
RSSFeed_TheDefiant = https://thedefiant.io/feed/
RSSFeed_ConsensysNews = https://consensys.io/category/news/feed/
; Add other relevant feeds:
; TheBlock: (User needs to find URL)
; BeInCrypto: (User needs to find URL)
; CCN Analysis: https://www.ccn.com/analysis/crypto-analysis/feeds/
; Consensys All: https://consensys.io/feed/


; --- LEGACY Ollama Settings (if ever needed for fallback, but primary is VertexAI) ---
; [Ollama_Legacy]
; BaseURL = http://localhost:11434
; SentimentLLMModel = gemma3:12b
; BrowserAgent_LLMModel = gemma3:12b